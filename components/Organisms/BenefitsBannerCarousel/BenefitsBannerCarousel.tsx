import React, { useState, useEffect, ReactNode } from 'react';
import { BenefitWrapper, CarouselContainer, CarouselInner } from './styled'
import Icons from '@/components/Atoms/Icons/Icons';
import Margin from '@/components/Atoms/Spacing/Margin/Margin';
import Text from "@/components/Atoms/Typography/Text"

const NavbarMoon = () => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="25" height="35" viewBox="0 0 33 33" fill="none">
      <path d="M28.3273 13.2307C28.3273 13.4522 28.237 13.6646 28.0764 13.8211C27.9158 13.9777 27.698 14.0657 27.4708 14.0657H25.7579V15.7357C25.7579 15.9571 25.6676 16.1695 25.507 16.3261C25.3464 16.4827 25.1285 16.5707 24.9014 16.5707C24.6743 16.5707 24.4564 16.4827 24.2958 16.3261C24.1352 16.1695 24.0449 15.9571 24.0449 15.7357V14.0657H22.332C22.1048 14.0657 21.887 13.9777 21.7264 13.8211C21.5658 13.6646 21.4755 13.4522 21.4755 13.2307C21.4755 13.0093 21.5658 12.7969 21.7264 12.6403C21.887 12.4837 22.1048 12.3957 22.332 12.3957H24.0449V10.7258C24.0449 10.5043 24.1352 10.2919 24.2958 10.1353C24.4564 9.97874 24.6743 9.89077 24.9014 9.89077C25.1285 9.89077 25.3464 9.97874 25.507 10.1353C25.6676 10.2919 25.7579 10.5043 25.7579 10.7258V12.3957H27.4708C27.698 12.3957 27.9158 12.4837 28.0764 12.6403C28.237 12.7969 28.3273 13.0093 28.3273 13.2307ZM18.0497 9.05578H18.9061V9.89077C18.9061 10.1122 18.9964 10.3246 19.157 10.4812C19.3176 10.6378 19.5354 10.7258 19.7626 10.7258C19.9897 10.7258 20.2076 10.6378 20.3682 10.4812C20.5288 10.3246 20.6191 10.1122 20.6191 9.89077V9.05578H21.4755C21.7027 9.05578 21.9205 8.9678 22.0811 8.81121C22.2418 8.65462 22.332 8.44224 22.332 8.22079C22.332 7.99933 22.2418 7.78695 22.0811 7.63036C21.9205 7.47377 21.7027 7.3858 21.4755 7.3858H20.6191V6.55081C20.6191 6.32936 20.5288 6.11697 20.3682 5.96038C20.2076 5.80379 19.9897 5.71582 19.7626 5.71582C19.5354 5.71582 19.3176 5.80379 19.157 5.96038C18.9964 6.11697 18.9061 6.32936 18.9061 6.55081V7.3858H18.0497C17.8225 7.3858 17.6047 7.47377 17.444 7.63036C17.2834 7.78695 17.1932 7.99933 17.1932 8.22079C17.1932 8.44224 17.2834 8.65462 17.444 8.81121C17.6047 8.9678 17.8225 9.05578 18.0497 9.05578ZM25.8403 19.18C25.94 19.2932 26.0068 19.4303 26.0337 19.5772C26.0606 19.724 26.0467 19.8752 25.9934 20.015C25.3991 21.5951 24.4061 23.0038 23.1061 24.1112C21.8061 25.2185 20.241 25.9887 18.5551 26.3508C16.8692 26.7128 15.117 26.6551 13.4601 26.1828C11.8031 25.7106 10.2949 24.839 9.07459 23.6486C7.85427 22.4582 6.96116 20.9873 6.4777 19.3717C5.99423 17.7561 5.93598 16.0477 6.30832 14.4043C6.68066 12.761 7.47159 11.2355 8.60813 9.96872C9.74467 8.70194 11.1902 7.73467 12.8113 7.15618C12.954 7.10523 13.108 7.09221 13.2575 7.11845C13.4071 7.1447 13.5468 7.20925 13.6623 7.30551C13.7778 7.40176 13.865 7.52624 13.9148 7.66617C13.9647 7.80611 13.9755 7.95646 13.9461 8.1018C13.646 9.58283 13.7246 11.1131 14.1751 12.5575C14.6255 14.0019 15.4339 15.3158 16.5289 16.3833C17.6238 17.4508 18.9716 18.239 20.4531 18.6781C21.9347 19.1173 23.5043 19.194 25.0234 18.9013C25.1727 18.8729 25.3271 18.8837 25.4706 18.9327C25.6142 18.9817 25.7418 19.067 25.8403 19.18ZM23.7644 20.7331C23.5728 20.7425 23.3801 20.7477 23.1885 20.7477C20.2361 20.7447 17.4056 19.5998 15.3182 17.5643C13.2307 15.5288 12.0569 12.7691 12.0544 9.89077C12.0544 9.70394 12.0544 9.51606 12.0694 9.32924C10.9298 9.96854 9.95653 10.855 9.22492 11.92C8.49331 12.985 8.02302 14.1999 7.85048 15.4706C7.67793 16.7413 7.80778 18.0337 8.22994 19.2476C8.65211 20.4615 9.35527 21.5643 10.2849 22.4707C11.2146 23.377 12.3458 24.0626 13.591 24.4741C14.8361 24.8857 16.1617 25.0123 17.4651 24.8441C18.7685 24.6759 20.0146 24.2174 21.107 23.5041C22.1994 22.7909 23.1087 21.842 23.7644 20.731V20.7331Z" fill="#202020"/>
    </svg>
  )
}

const NavbarCamion = () => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="25" height="35" viewBox="0 0 33 33" fill="none">
      <path d="M29.6521 15.0629L28.1101 11.2962C27.9793 10.9775 27.7535 10.7045 27.4621 10.5126C27.1707 10.3207 26.827 10.2188 26.4756 10.22H22.6668V9.35901C22.6668 9.13067 22.5739 8.91168 22.4087 8.75022C22.2434 8.58876 22.0193 8.49805 21.7856 8.49805H5.04357C4.57617 8.49805 4.12792 8.67946 3.79742 9.00239C3.46692 9.32531 3.28125 9.76329 3.28125 10.22V22.2734C3.28125 22.7301 3.46692 23.1681 3.79742 23.491C4.12792 23.8139 4.57617 23.9954 5.04357 23.9954H6.91603C7.11015 24.7361 7.55108 25.3927 8.16931 25.8616C8.78754 26.3305 9.5479 26.585 10.3305 26.585C11.1131 26.585 11.8735 26.3305 12.4917 25.8616C13.11 25.3927 13.5509 24.7361 13.745 23.9954H19.2523C19.4464 24.7361 19.8873 25.3927 20.5055 25.8616C21.1238 26.3305 21.8841 26.585 22.6668 26.585C23.4494 26.585 24.2097 26.3305 24.828 25.8616C25.4462 25.3927 25.8871 24.7361 26.0812 23.9954H27.9537C28.4211 23.9954 28.8694 23.8139 29.1999 23.491C29.5304 23.1681 29.716 22.7301 29.716 22.2734V15.3857C29.7163 15.2751 29.6946 15.1654 29.6521 15.0629ZM22.6668 11.9419H26.4756L27.533 14.5248H22.6668V11.9419ZM5.04357 10.22H20.9044V17.1077H5.04357V10.22ZM10.3305 24.8563C9.98197 24.8563 9.64124 24.7553 9.35143 24.5661C9.06162 24.3769 8.83574 24.108 8.70235 23.7934C8.56897 23.4787 8.53407 23.1325 8.60207 22.7985C8.67007 22.4644 8.83791 22.1576 9.08438 21.9168C9.33084 21.676 9.64486 21.512 9.98671 21.4456C10.3286 21.3791 10.6829 21.4132 11.0049 21.5435C11.327 21.6739 11.6022 21.8946 11.7958 22.1777C11.9895 22.4609 12.0928 22.7938 12.0928 23.1344C12.0928 23.5911 11.9072 24.0291 11.5767 24.352C11.2462 24.6749 10.7979 24.8563 10.3305 24.8563ZM19.2523 22.2734H13.745C13.5509 21.5327 13.11 20.8761 12.4917 20.4072C11.8735 19.9383 11.1131 19.6838 10.3305 19.6838C9.5479 19.6838 8.78754 19.9383 8.16931 20.4072C7.55108 20.8761 7.11015 21.5327 6.91603 22.2734H5.04357V18.8296H20.9044V20.1544C20.4993 20.3832 20.1446 20.6884 19.861 21.0521C19.5774 21.4159 19.3705 21.831 19.2523 22.2734ZM22.6668 24.8563C22.3182 24.8563 21.9775 24.7553 21.6877 24.5661C21.3979 24.3769 21.172 24.108 21.0386 23.7934C20.9052 23.4787 20.8703 23.1325 20.9383 22.7985C21.0063 22.4644 21.1741 22.1576 21.4206 21.9168C21.6671 21.676 21.9811 21.512 22.3229 21.4456C22.6648 21.3791 23.0191 21.4132 23.3412 21.5435C23.6632 21.6739 23.9384 21.8946 24.1321 22.1777C24.3257 22.4609 24.4291 22.7938 24.4291 23.1344C24.4291 23.5911 24.2434 24.0291 23.9129 24.352C23.5824 24.6749 23.1341 24.8563 22.6668 24.8563ZM27.9537 22.2734H26.0812C25.8848 21.5345 25.443 20.88 24.8251 20.4126C24.2073 19.9452 23.4482 19.6913 22.6668 19.6906V16.2467H27.9537V22.2734Z" fill="#202020"/>
    </svg>
  )
}

const NavbarHand = () => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="25" height="35" viewBox="0 0 33 33" fill="none">
      <path d="M27.3113 18.4397C27.0007 18.1908 26.6392 18.0198 26.2549 17.94C25.8706 17.8603 25.4738 17.874 25.0953 17.98L20.7302 19.0256C20.8318 18.5786 20.8349 18.1135 20.7394 17.6651C20.6439 17.2167 20.4522 16.7966 20.1787 16.4364C19.9052 16.0762 19.557 15.7851 19.1601 15.585C18.7633 15.3849 18.3281 15.281 17.8873 15.281H12.6646C12.226 15.2799 11.7915 15.3693 11.3863 15.5441C10.981 15.7189 10.6131 15.9757 10.3036 16.2995L7.9437 18.7593H4.95051C4.50779 18.7593 4.08321 18.9425 3.77016 19.2687C3.45712 19.5948 3.28125 20.0372 3.28125 20.4984L3.28125 24.8463C3.28125 25.3075 3.45712 25.7499 3.77016 26.076C4.08321 26.4022 4.50779 26.5854 4.95051 26.5854H15.8007C15.8689 26.5854 15.9369 26.5767 16.0031 26.5593L22.6801 24.8202C22.7227 24.8096 22.7642 24.7951 22.8043 24.7767L26.8595 22.9789L26.9054 22.9571C27.2952 22.7542 27.6289 22.4513 27.8752 22.0769C28.1215 21.7024 28.2723 21.2688 28.3133 20.8169C28.3543 20.365 28.2843 19.9097 28.1097 19.4938C27.9351 19.0779 27.6618 18.7152 27.3155 18.4397H27.3113ZM4.95051 20.4984H7.4544V24.8463H4.95051V20.4984ZM26.1741 21.3908L22.2096 23.1495L15.6964 24.8463H9.12366V19.9886L11.4846 17.53C11.6391 17.3678 11.8229 17.2392 12.0255 17.1516C12.228 17.0641 12.4453 17.0194 12.6646 17.0202H17.8873C18.2193 17.0202 18.5377 17.1576 18.7725 17.4022C19.0073 17.6468 19.1392 17.9786 19.1392 18.3245C19.1392 18.6705 19.0073 19.0022 18.7725 19.2468C18.5377 19.4914 18.2193 19.6289 17.8873 19.6289H14.9661C14.7447 19.6289 14.5324 19.7205 14.3759 19.8836C14.2194 20.0466 14.1314 20.2678 14.1314 20.4984C14.1314 20.7291 14.2194 20.9502 14.3759 21.1133C14.5324 21.2764 14.7447 21.368 14.9661 21.368H18.3046C18.3674 21.3678 18.43 21.3605 18.4913 21.3463L25.4814 19.6713L25.5137 19.6626C25.7271 19.6008 25.9548 19.6235 26.1531 19.7262C26.3514 19.8289 26.5063 20.0044 26.5878 20.2189C26.6694 20.4334 26.672 20.6718 26.595 20.8881C26.518 21.1045 26.367 21.2835 26.171 21.3908H26.1741ZM20.3912 13.5419C20.5974 13.5422 20.8032 13.5247 21.0067 13.4897C21.2355 14.1979 21.6542 14.8231 22.2133 15.2912C22.7723 15.7593 23.4483 16.0509 24.1614 16.1315C24.8745 16.212 25.5947 16.0781 26.2371 15.7457C26.8794 15.4133 27.417 14.8961 27.7862 14.2555C28.1554 13.6148 28.3408 12.8775 28.3205 12.1305C28.3003 11.3835 28.0751 10.6582 27.6717 10.0404C27.2683 9.42252 26.7035 8.93791 26.0442 8.64386C25.3848 8.34981 24.6584 8.25861 23.9509 8.38104C23.7305 7.6987 23.3337 7.09292 22.8042 6.63036C22.2747 6.16781 21.633 5.86641 20.9497 5.75934C20.2664 5.65227 19.5679 5.74368 18.9313 6.0235C18.2946 6.30332 17.7444 6.76072 17.3411 7.34535C16.9379 7.92998 16.6972 8.61918 16.6457 9.3371C16.5942 10.055 16.7338 10.7738 17.0491 11.4144C17.3644 12.055 17.8432 12.5926 18.4329 12.968C19.0225 13.3433 19.7002 13.5419 20.3912 13.5419ZM26.6509 12.2376C26.6509 12.6675 26.5285 13.0878 26.2992 13.4453C26.07 13.8028 25.7441 14.0815 25.3628 14.246C24.9815 14.4105 24.562 14.4536 24.1572 14.3697C23.7525 14.2858 23.3807 14.0788 23.0889 13.7747C22.7971 13.4707 22.5983 13.0834 22.5178 12.6617C22.4373 12.24 22.4786 11.8029 22.6366 11.4056C22.7945 11.0084 23.0619 10.6689 23.4051 10.43C23.7482 10.1911 24.1516 10.0636 24.5643 10.0636C25.1177 10.0636 25.6484 10.2927 26.0397 10.7004C26.431 11.1081 26.6509 11.661 26.6509 12.2376ZM20.3912 7.45495C20.8463 7.45519 21.289 7.6105 21.6516 7.89721C22.0142 8.18392 22.2768 8.5863 22.3995 9.043C21.972 9.35636 21.612 9.75923 21.3426 10.2258C21.0731 10.6924 20.9001 11.2125 20.8346 11.7528C20.6888 11.7856 20.5402 11.8023 20.3912 11.8028C19.8378 11.8028 19.307 11.5737 18.9157 11.1661C18.5244 10.7584 18.3046 10.2054 18.3046 9.62887C18.3046 9.05231 18.5244 8.49936 18.9157 8.09168C19.307 7.68399 19.8378 7.45495 20.3912 7.45495Z" fill="#202020"/>
    </svg>
  )
}

const NavbarMoney = () => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="25" height="35" viewBox="0 0 33 33" fill="none">
      <path d="M23.2584 14.6823C23.2584 14.9272 23.1806 15.1665 23.0348 15.3701C22.8889 15.5737 22.6817 15.7324 22.4392 15.8261C22.1966 15.9198 21.9298 15.9444 21.6723 15.8966C21.4149 15.8488 21.1784 15.7309 20.9928 15.5578C20.8072 15.3846 20.6808 15.164 20.6296 14.9238C20.5784 14.6837 20.6046 14.4347 20.7051 14.2085C20.8055 13.9823 20.9757 13.7889 21.1939 13.6529C21.4122 13.5168 21.6688 13.4442 21.9313 13.4442C22.2833 13.4442 22.6208 13.5746 22.8697 13.8068C23.1186 14.039 23.2584 14.3539 23.2584 14.6823ZM18.8345 9.31721H14.4105C14.1759 9.31721 13.9508 9.40417 13.7849 9.55897C13.619 9.71376 13.5257 9.9237 13.5257 10.1426C13.5257 10.3615 13.619 10.5715 13.7849 10.7263C13.9508 10.881 14.1759 10.968 14.4105 10.968H18.8345C19.0691 10.968 19.2942 10.881 19.4601 10.7263C19.6261 10.5715 19.7193 10.3615 19.7193 10.1426C19.7193 9.9237 19.6261 9.71376 19.4601 9.55897C19.2942 9.40417 19.0691 9.31721 18.8345 9.31721ZM29.452 14.2696V17.5712C29.452 18.2279 29.1723 18.8577 28.6745 19.3221C28.1768 19.7865 27.5016 20.0474 26.7976 20.0474H26.5366L24.7438 24.7294C24.621 25.0501 24.395 25.3276 24.0966 25.5237C23.7982 25.7199 23.4421 25.8252 23.0771 25.8251H21.6702C21.3052 25.8252 20.9491 25.7199 20.6507 25.5237C20.3523 25.3276 20.1263 25.0501 20.0035 24.7294L19.7912 24.1744H13.4538L13.2415 24.7294C13.1188 25.0501 12.8927 25.3276 12.5943 25.5237C12.2959 25.7199 11.9398 25.8252 11.5748 25.8251H10.1679C9.80291 25.8252 9.4468 25.7199 9.14841 25.5237C8.85002 25.3276 8.62397 25.0501 8.50122 24.7294L7.11099 21.1018C5.78843 19.7054 4.9603 17.9622 4.73975 16.1102C4.45421 16.2501 4.21509 16.4602 4.04823 16.7177C3.88137 16.9752 3.79312 17.2703 3.79302 17.5712C3.79302 17.7901 3.6998 18 3.53387 18.1548C3.36794 18.3096 3.14289 18.3966 2.90823 18.3966C2.67357 18.3966 2.44852 18.3096 2.28259 18.1548C2.11666 18 2.02344 17.7901 2.02344 17.5712C2.02479 16.8351 2.28978 16.1205 2.77632 15.541C3.26286 14.9615 3.94303 14.5503 4.70878 14.3728C4.90644 12.0981 6.01387 9.97597 7.81117 8.42777C9.60847 6.87956 11.9642 6.01852 14.4105 6.01562H25.9128C26.1475 6.01562 26.3725 6.10259 26.5385 6.25738C26.7044 6.41217 26.7976 6.62211 26.7976 6.84102C26.7976 7.05993 26.7044 7.26987 26.5385 7.42467C26.3725 7.57946 26.1475 7.66642 25.9128 7.66642H23.5471C25.0155 8.62749 26.1703 9.94867 26.8839 11.4839C26.9314 11.5871 26.9779 11.6902 27.0221 11.7934C27.6865 11.846 28.3053 12.1299 28.7555 12.5887C29.2057 13.0475 29.4544 13.6476 29.452 14.2696ZM27.6824 14.2696C27.6824 14.0507 27.5892 13.8407 27.4233 13.6859C27.2573 13.5312 27.0323 13.4442 26.7976 13.4442H26.3928C26.2044 13.4444 26.0208 13.3884 25.8688 13.2845C25.7168 13.1806 25.6044 13.0341 25.5478 12.8664C25.0409 11.3573 24.0303 10.0388 22.6634 9.10338C21.2965 8.16792 19.645 7.66444 17.9497 7.66642H14.4105C12.8651 7.66634 11.3531 8.08575 10.0589 8.8735C8.76459 9.66125 7.744 10.7833 7.12153 12.1028C6.49906 13.4223 6.30162 14.8823 6.55328 16.3047C6.80494 17.7271 7.49483 19.0505 8.53883 20.1134C8.61866 20.1944 8.68033 20.2895 8.72021 20.393L10.1679 24.1744H11.5748L11.9973 23.0714C12.0586 22.9111 12.1715 22.7725 12.3206 22.6744C12.4697 22.5763 12.6476 22.5236 12.8301 22.5236H20.4149C20.5974 22.5236 20.7753 22.5763 20.9244 22.6744C21.0735 22.7725 21.1864 22.9111 21.2478 23.0714L21.6702 24.1744H23.0771L25.08 18.9444C25.1414 18.7842 25.2543 18.6455 25.4034 18.5474C25.5525 18.4494 25.7304 18.3967 25.9128 18.3966H26.7976C27.0323 18.3966 27.2573 18.3096 27.4233 18.1548C27.5892 18 27.6824 17.7901 27.6824 17.5712V14.2696Z" fill="#202020"/>
    </svg>
  )
}

interface IProps {
  items: {
    icon: string
    text: string 
  }[]
}

const BenefitsBannerCarousel = ({items}: IProps) => {
  const [render, setRender] = useState(false);
  const [currentItem, setCurrentItem] = useState(0);

  useEffect(() => {
    setRender(true)
  }, [1000]);

 useEffect(() => {
    const interval = setInterval(() => {
      setCurrentItem((prevState) => (prevState === items.length - 1 ? 0 : prevState + 1));
    }, 5000);

    return () => {
      clearInterval(interval);
    };
  }, [items.length]);

  return (
    <CarouselContainer>
      <CarouselInner $totalItems={items.length} $currentItem={currentItem}>
      {
        items.map((item, index) => (
          <BenefitWrapper key={index}>
            <Icons>
             {
                render && (
                  item.icon === "NavbarMoon"
                  ? NavbarMoon()
                  : item.icon === "NavbarCamion" 
                  ? NavbarCamion()
                  : item.icon === "NavbarHand" 
                  ? NavbarHand()
                  : item.icon === "NavbarMoney"
                  && NavbarMoney()
                )
              }
            </Icons>
            <Margin margin="0 3px" />
            <Text
              fontSize=".8em"
              lineHeight="30px"
              font="medium"
              color="lead"
              responsiveMobile={{ fontSize: "0.7em" }}
              align="center"
            >
              {item.text}
            </Text>
          </BenefitWrapper>
        ))
      }
      </CarouselInner>
    </CarouselContainer>
  );
};

export default BenefitsBannerCarousel;
